#include<iostream>
#include<Windows.h>
#include<string>
using namespace std;
bool Isempty(int count)
{
	if (count == 0)
	{
		return true;
	}
	else
	{
		false;
	}
}
bool Isfull(int count)
{
	if (count == 9)
	{
		return true;
	}
	else
	{
		return false;
	}
}

int Insert(int *Tree, int count)
{
	if (Isfull(count))
	{
		cout << "FULL" << endl;

	}
	else
	{
		int parent = count;
		int x;
		cout << "Enter Value to insert : ";
		cin >> x;
		Tree[count] = x;
		count++;
		return count;
	}
}

void Search(int *Tree, int count)
{
	bool flag = 0;
	int x;
	cout << "Enter Value to Search : ";
	cin >> x;

	for (int i = 0; i < count; i++)
	{
		if (Tree[i] == x)
		{
			flag = 1;
		}
	}
	if (flag == 1)
	{
		cout << " Found " << endl;
	}
	else
	{
		cout << "Not Found " << endl;
	}
}

void Delete(int *Tree, int count)
{
	int index;
	bool flag = 0;
	int x;
	cout << "Enter Value to Delete : ";
	cin >> x;

	for (int i = 0; i < count; i++)
	{
		if (Tree[i] == x)
		{
			flag = 1;
			index = i;
			break;
		}
	}
	if (flag == 1)
	{
		cout << " Found " << endl;
		Tree[index] = Tree[count-1];
		Tree[count-1] = 0;
		count--;
	}
	else
	{
		cout << "Not Found " << endl;
	}

}

void Display(int *Tree, int count)
{
	for (int i = 0; i < count; i++)
	{
		cout << Tree[i] << " " << endl;
	}
}
int main()
{
	int count = 0;
	int Tree[10];
	int option;
	do
	{
		cout << "\tS.D.T.G" << endl;
		cout << "1 - Insert " << endl;
		cout << "2 - Display " << endl;
		cout << "3 - Search " << endl;
		cout << "4 - Delete " << endl;
		cout << "5 - Exit" << endl;
		cout << "\nChoice : ";
		cin >> option;
		system("cls");
		switch (option)
		{
		case 1:
		{
			count = Insert(Tree, count);
			break;
		}
		case 2:
		{
			Display(Tree,  count);
			break;
		}

		case 3:
		{
			Search(Tree, count);
			break;
		}
		case 4:
		{
			Delete(Tree, count);
			break;
		}
		case 5://exit
		{
			cout << "Program is about to terminate" << endl;
			Sleep(2000);
			exit(-1);
		}
		default:

			cout << "************   Enter a valid number   *************" << endl;
			cout << "***************************************************" << endl;
		}
	} while (1);


}

